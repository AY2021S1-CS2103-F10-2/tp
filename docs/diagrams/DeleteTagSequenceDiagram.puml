@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeleteTagCommandParser" as DeleteTagCommandParser LOGIC_COLOR
participant ":ArgumentTokenizer" as ArgumentTokenizer LOGIC_COLOR
participant "argMultimap:ArgumentMultimap" as ArgumentMultimap LOGIC_COLOR
participant ":ParserUtil" as ParserUtil LOGIC_COLOR
participant "c:DeleteTagCommand" as DeleteTagCommand LOGIC_COLOR
participant "editedPerson:Person" as Person LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("tag delete Alex Yeoh t/friends")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("tag delete Alex Yeoh t/friends")
activate AddressBookParser

create DeleteTagCommandParser
AddressBookParser -> DeleteTagCommandParser : DeleteTagCommandParser()
activate DeleteTagCommandParser

DeleteTagCommandParser --> AddressBookParser
deactivate DeleteTagCommandParser

AddressBookParser -> DeleteTagCommandParser : parse("Alex Yeoh t/friends")
activate DeleteTagCommandParser

DeleteTagCommandParser -> ArgumentTokenizer : tokenize(args, PREFIX_TAG)
activate ArgumentTokenizer

create ArgumentMultimap
ArgumentTokenizer -> ArgumentMultimap : ArgumentMultimap()
activate ArgumentMultimap

ArgumentMultimap --> ArgumentTokenizer : argMultimap
deactivate ArgumentMultimap

ArgumentTokenizer --> DeleteTagCommandParser : argMultimap
deactivate ArgumentTokenizer

DeleteTagCommandParser -> ParserUtil : parseName("Alex Yeoh")
activate ParserUtil

ParserUtil --> DeleteTagCommandParser : name
deactivate ParserUtil

DeleteTagCommandParser -> ArgumentMultimap : getAllValues(PREFIX_TAG)
activate ArgumentMultimap

ArgumentMultimap --> DeleteTagCommandParser : tagList
deactivate ArgumentMultimap

create DeleteTagCommand
DeleteTagCommandParser -> DeleteTagCommand : DeleteTagCommand(name, tagsToDelete);
activate DeleteTagCommand

DeleteTagCommand --> DeleteTagCommandParser : c
deactivate DeleteTagCommand

DeleteTagCommandParser --> AddressBookParser : c
destroy DeleteTagCommandParser

AddressBookParser --> LogicManager : c
deactivate AddressBookParser

LogicManager -> DeleteTagCommand : execute()
activate DeleteTagCommand

create Person
DeleteTagCommand -> Person
activate Person

Person --> DeleteTagCommand : editedPerson
deactivate Person

DeleteTagCommand -> Model : setPerson(p, editedPerson)
activate Model

Model --> DeleteTagCommand
deactivate Model

DeleteTagCommand -> Model : updatePersonInMeetingBook(p, editedPerson)
activate Model

Model --> DeleteTagCommand
deactivate Model

DeleteTagCommand -> Model : updatePersonInModuleBook(p, editedPerson)
activate Model

Model --> DeleteTagCommand
deactivate Model

create CommandResult
DeleteTagCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteTagCommand
deactivate CommandResult

DeleteTagCommand --> LogicManager : result
destroy DeleteTagCommand

[<--LogicManager
deactivate LogicManager
@enduml
